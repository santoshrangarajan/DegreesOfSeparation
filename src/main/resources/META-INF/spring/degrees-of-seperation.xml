<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
    xmlns="http://www.springframework.org/schema/hadoop" 
    xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	                    http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.1.xsd
	                    http://www.springframework.org/schema/hadoop http://www.springframework.org/schema/hadoop/spring-hadoop.xsd
	                    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

   
    
    
     <context:property-placeholder location="hadoop.properties,dos.properties"/>
	
	  <configuration> 
		        fs.default.name=${hd.fs}
		        mapred.job.tracker=${mapred.job.tracker}
	    </configuration>
	          
    
    <batch:job id="job">
        
        <batch:step id="pre-processor" next="local-to-hadoop">
            <batch:tasklet ref="preProcessor"/>
        </batch:step>
        
        <batch:step id="local-to-hadoop" next="bfs">
            <batch:tasklet ref="localToHadoop"/>
        </batch:step>
        
       
        <batch:step id="bfs" next="iterateDecision">
                <batch:tasklet ref="bfsTask">
                    	<batch:listeners>
				            <batch:listener ref="iterationDecider" />
			          </batch:listeners>
                </batch:tasklet>
        </batch:step>
        
        <batch:decision id="iterateDecision" decider="iterationDecider">
			<batch:next on="CONTINUE"  to="bfs" />
			<batch:next on="COMPLETED" to="hadoop-to-local"/>
		</batch:decision>
		
        <batch:step id="hadoop-to-local" next="post-processor">
            <batch:tasklet ref="hadoopToLocal"/>
        </batch:step>
        
         <batch:step id="post-processor" next="degrees-of-seperation">
            <batch:tasklet ref="postProcessor"/>
        </batch:step>
        
         <batch:step id="degrees-of-seperation" >
            <batch:tasklet ref="degreesOfSeperation"/>
        </batch:step>
		
    </batch:job>
   
	
        
    <job-tasklet id="bfsTask" job-ref="bfsHdpJob"   />
    
    <job id="bfsHdpJob" 
	     input-path="#{stepExecutionContext['mr.input']}" 
         output-path="#{stepExecutionContext['mr.output']}" 
		 mapper="com.abstractlayers.degrees.tasks.BfsMapper"
         reducer="com.abstractlayers.degrees.tasks.BfsReducer"
         scope="step" />
    
     
    <beans:bean id="iterationDecider" class="com.abstractlayers.degrees.tasks.IterationDecider">
		<beans:property name="maxIterations" value="${iteration.count}" />
	</beans:bean>
    
    <beans:bean id="preProcessor" class="com.abstractlayers.degrees.tasks.PreProcessor">
        <beans:constructor-arg index="0" ref="symbolGraphBfs"/>
        <beans:constructor-arg index="1" ref="fileUtils"/>
        <beans:constructor-arg index="2" value="${input.localDirectory}"/>
        <beans:constructor-arg index="3" value="${input.localFile}"/>
     </beans:bean>
     
     <beans:bean id="postProcessor" class="com.abstractlayers.degrees.tasks.PostProcessor">
        <beans:constructor-arg index="0" ref="symbolGraphBfs"/>
        <beans:constructor-arg index="1" value="${output.localDirectory}"/>
        <beans:constructor-arg index="2" value="${output.localFile}"/>
     </beans:bean>
     
     <beans:bean id="degreesOfSeperation" class="com.abstractlayers.degrees.tasks.DegreesOfSeperationClient">
        <beans:property name="symbolGraphBfs" ref="symbolGraphBfs"/>
        <beans:property name="destination" value="${sample.destination.name}"/>
     </beans:bean>
  
     
     <beans:bean id="localToHadoop" class="com.abstractlayers.degrees.tasks.LocalToHadoop">
        <beans:property name="localFile" value="${input.localFile}"/>
        <beans:property name="localDirectory" value="${input.localDirectory}"/>
        <beans:property name="hadoopFile" value="${input.hadoopFile}"/>
        <beans:property name="hadoopDirectory" value="${input.hadoopDirectory}"/>
        <beans:property name="hadoopConf" ref="hadoopConf"/>
        <beans:property name="confCoreSite" value="${conf.core.site}"/>
        <beans:property name="confHdfsSite" value="${conf.hdfs.site}"/>
     </beans:bean>
     
     <beans:bean id="hadoopToLocal" class="com.abstractlayers.degrees.tasks.HadoopToLocal">
        <beans:property name="hadoopFile" value="${output.hadoopFile}"/>
        <beans:property name="hadoopDirectory" value="${output.hadoopDirectory}"/>
        <beans:property name="localFile" value="${output.localFile}"/>
        <beans:property name="localDirectory" value="${output.localDirectory}"/>
        <beans:property name="hadoopConf" ref="hadoopConf"/>
        <beans:property name="confCoreSite" value="${conf.core.site}"/>
        <beans:property name="confHdfsSite" value="${conf.hdfs.site}"/>
     </beans:bean>
     
     <beans:bean id="hadoopConf" class="org.apache.hadoop.conf.Configuration" />
    
    <beans:bean id="symbolGraphBfs" class="com.abstractlayers.degrees.ds.SymbolGraphBfs" >
        <beans:constructor-arg index="0" value="${input.file}"/>
        <beans:constructor-arg index="1" value="${input.file.delimiter}"/>
        <beans:constructor-arg index="2" value="${source.name}"/>
    </beans:bean>
    
    <beans:bean id="fileUtils" class="com.abstractlayers.degrees.utils.FileUtils"/>

</beans:beans>